<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">

    <!--
    OWASP Dependency Check Suppressions for Gasolinera JSM

    This file contains suppressions for known false positives and accepted risks.
    Each suppression should include:
    1. Clear justification for why it's suppressed
    2. Expiration date for review
    3. CVE or vulnerability identifier
    -->

    <!-- Spring Boot Framework - Known false positives -->
    <suppress>
        <notes><![CDATA[
        Spring Boot starter dependencies often trigger false positives for CVEs
        that don't apply to our usage patterns or are already patched in our version.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.springframework\.boot/spring-boot-starter.*@.*$</packageUrl>
        <cve>CVE-2016-1000027</cve>
        <cve>CVE-2018-1258</cve>
        <cve>CVE-2018-15756</cve>
    </suppress>

    <!-- Jackson Library - Accepted risk for specific versions -->
    <suppress>
        <notes><![CDATA[
        Jackson CVEs related to polymorphic deserialization. We don't use
        polymorphic deserialization in our application, so these are not applicable.
        Reviewed: 2024-01-15, Next review: 2024-07-15
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/com\.fasterxml\.jackson\.core/jackson.*@.*$</packageUrl>
        <cve>CVE-2019-12086</cve>
        <cve>CVE-2019-14540</cve>
        <cve>CVE-2019-16335</cve>
        <cve>CVE-2019-17531</cve>
        <cve>CVE-2020-8840</cve>
    </suppress>

    <!-- Kotlin Standard Library - False positives -->
    <suppress>
        <notes><![CDATA[
        Kotlin stdlib false positives - these CVEs don't apply to Kotlin runtime.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.jetbrains\.kotlin/kotlin-stdlib.*@.*$</packageUrl>
        <cve>CVE-2020-15824</cve>
        <cve>CVE-2020-29582</cve>
    </suppress>

    <!-- PostgreSQL Driver - Accepted risk -->
    <suppress>
        <notes><![CDATA[
        PostgreSQL driver CVEs that don't apply to our connection configuration.
        We use connection pooling and don't expose raw JDBC connections.
        Reviewed: 2024-01-15, Next review: 2024-07-15
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.postgresql/postgresql@.*$</packageUrl>
        <cve>CVE-2022-21724</cve>
    </suppress>

    <!-- Netty - False positives for HTTP/2 -->
    <suppress>
        <notes><![CDATA[
        Netty HTTP/2 vulnerabilities that don't apply to our usage.
        We don't use HTTP/2 features that are affected by these CVEs.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/io\.netty/netty.*@.*$</packageUrl>
        <cve>CVE-2021-21290</cve>
        <cve>CVE-2021-21295</cve>
        <cve>CVE-2021-21409</cve>
    </suppress>

    <!-- Tomcat Embedded - Spring Boot managed -->
    <suppress>
        <notes><![CDATA[
        Tomcat embedded vulnerabilities are managed by Spring Boot version updates.
        These are typically patched in the Spring Boot BOM we're using.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.apache\.tomcat\.embed/tomcat-embed.*@.*$</packageUrl>
        <cve>CVE-2021-25122</cve>
        <cve>CVE-2021-25329</cve>
    </suppress>

    <!-- Logback - Configuration-dependent vulnerabilities -->
    <suppress>
        <notes><![CDATA[
        Logback vulnerabilities related to JNDI lookups and XML configuration.
        We use programmatic configuration and don't enable JNDI lookups.
        Reviewed: 2024-01-15, Next review: 2024-07-15
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/ch\.qos\.logback/logback.*@.*$</packageUrl>
        <cve>CVE-2021-42550</cve>
    </suppress>

    <!-- SnakeYAML - Safe usage patterns -->
    <suppress>
        <notes><![CDATA[
        SnakeYAML deserialization vulnerabilities. We only deserialize trusted
        YAML configuration files, not user input.
        Reviewed: 2024-01-15, Next review: 2024-07-15
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.yaml/snakeyaml@.*$</packageUrl>
        <cve>CVE-2022-25857</cve>
        <cve>CVE-2022-38749</cve>
        <cve>CVE-2022-38750</cve>
        <cve>CVE-2022-38751</cve>
        <cve>CVE-2022-38752</cve>
    </suppress>

    <!-- H2 Database - Test only -->
    <suppress>
        <notes><![CDATA[
        H2 database vulnerabilities. We only use H2 for testing, never in production.
        Test databases don't pose security risks in our deployment model.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/com\.h2database/h2@.*$</packageUrl>
        <cve>CVE-2021-23463</cve>
        <cve>CVE-2022-23221</cve>
    </suppress>

    <!-- JUnit - Test framework only -->
    <suppress>
        <notes><![CDATA[
        JUnit vulnerabilities don't apply to production code as it's test-only dependency.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.junit\.jupiter/junit-jupiter.*@.*$</packageUrl>
        <vulnerabilityName>CVE-2020-15250</vulnerabilityName>
    </suppress>

    <!-- Mockito - Test framework only -->
    <suppress>
        <notes><![CDATA[
        Mockito is used only in tests and doesn't pose production security risks.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.mockito/mockito.*@.*$</packageUrl>
        <vulnerabilityName regex="true">.*</vulnerabilityName>
    </suppress>

    <!-- TestContainers - Test framework only -->
    <suppress>
        <notes><![CDATA[
        TestContainers is used only for integration testing and doesn't run in production.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.testcontainers/.*@.*$</packageUrl>
        <vulnerabilityName regex="true">.*</vulnerabilityName>
    </suppress>

    <!-- Gradle wrapper - Build tool only -->
    <suppress>
        <notes><![CDATA[
        Gradle wrapper vulnerabilities don't affect runtime security.
        ]]></notes>
        <filePath regex="true">.*gradle-wrapper\.jar</filePath>
        <vulnerabilityName regex="true">.*</vulnerabilityName>
    </suppress>

    <!-- Development tools - Not in production -->
    <suppress>
        <notes><![CDATA[
        Development and build tools that are not included in production artifacts.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.springframework\.boot/spring-boot-devtools@.*$</packageUrl>
        <vulnerabilityName regex="true">.*</vulnerabilityName>
    </suppress>

    <!-- Micrometer - Metrics library false positives -->
    <suppress>
        <notes><![CDATA[
        Micrometer metrics library false positives for CVEs that don't apply
        to metrics collection usage patterns.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/io\.micrometer/micrometer.*@.*$</packageUrl>
        <cve>CVE-2022-31197</cve>
    </suppress>

    <!-- Redis client - Jedis false positives -->
    <suppress>
        <notes><![CDATA[
        Jedis Redis client false positives. We use connection pooling and
        don't expose Redis connections directly.
        Reviewed: 2024-01-15, Next review: 2024-07-15
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/redis\.clients/jedis@.*$</packageUrl>
        <cve>CVE-2021-32626</cve>
    </suppress>

    <!-- RabbitMQ client - AMQP library -->
    <suppress>
        <notes><![CDATA[
        RabbitMQ AMQP client vulnerabilities that don't apply to our usage.
        We use secure connections and don't expose AMQP directly.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/com\.rabbitmq/amqp-client@.*$</packageUrl>
        <cve>CVE-2023-46120</cve>
    </suppress>

    <!-- Bouncy Castle - Cryptography library -->
    <suppress>
        <notes><![CDATA[
        Bouncy Castle cryptography library. We use it only for JWT key generation
        and don't use the vulnerable cryptographic primitives.
        Reviewed: 2024-01-15, Next review: 2024-07-15
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.bouncycastle/.*@.*$</packageUrl>
        <cve>CVE-2023-33201</cve>
    </suppress>

    <!-- Apache Commons - Utility libraries -->
    <suppress>
        <notes><![CDATA[
        Apache Commons libraries false positives for vulnerabilities that
        don't apply to our usage patterns.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.apache\.commons/commons.*@.*$</packageUrl>
        <cve>CVE-2022-42889</cve> <!-- Commons Text - we don't use string substitution -->
    </suppress>

    <!-- Temporary suppressions for known issues being addressed -->
    <suppress until="2024-06-30Z">
        <notes><![CDATA[
        Temporary suppression for library upgrade in progress.
        Ticket: GSOL-1234 - Upgrade vulnerable dependencies
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/com\.example/temporary-lib@.*$</packageUrl>
        <vulnerabilityName regex="true">.*</vulnerabilityName>
    </suppress>

    <!-- File-based suppressions for specific jar files -->
    <suppress>
        <notes><![CDATA[
        Suppress vulnerabilities in specific JAR files that are false positives
        due to file name similarity but different actual libraries.
        ]]></notes>
        <filePath regex="true">.*spring-boot-[0-9]+\.[0-9]+\.[0-9]+\.jar</filePath>
        <cve>CVE-1999-0001</cve> <!-- Example of non-applicable CVE -->
    </suppress>

</suppressions>