# Prometheus Configuration for Gasolinera JSM
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: "gasolinera-jsm"
    environment: "production"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]
    scrape_interval: 30s
    metrics_path: /metrics

  # API Gateway
  - job_name: "api-gateway"
    static_configs:
      - targets: ["api-gateway:8080"]
    scrape_interval: 15s
    metrics_path: /actuator/prometheus
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ["prometheus"]

  # Auth Service
  - job_name: "auth-service"
    static_configs:
      - targets: ["auth-service:8081"]
    scrape_interval: 15s
    metrics_path: /actuator/prometheus
    scrape_timeout: 10s
    honor_labels: true

  # Station Service
  - job_name: "station-service"
    static_configs:
      - targets: ["station-service:8083"]
    scrape_interval: 15s
    metrics_path: /actuator/prometheus
    scrape_timeout: 10s
    honor_labels: true

  # Coupon Service
  - job_name: "coupon-service"
    static_configs:
      - targets: ["coupon-service:8084"]
    scrape_interval: 15s
    metrics_path: /actuator/prometheus
    scrape_timeout: 10s
    honor_labels: true

  # Raffle Service
  - job_name: "raffle-service"
    static_configs:
      - targets: ["raffle-service:8085"]
    scrape_interval: 15s
    metrics_path: /actuator/prometheus
    scrape_timeout: 10s
    honor_labels: true

  # Dashboard Service
  - job_name: "dashboard-service"
    static_configs:
      - targets: ["dashboard-service:8086"]
    scrape_interval: 15s
    metrics_path: /actuator/prometheus
    scrape_timeout: 10s
    honor_labels: true

  # PostgreSQL Exporter
  - job_name: "postgresql"
    static_configs:
      - targets: ["postgres-exporter:9187"]
    scrape_interval: 30s
    scrape_timeout: 10s

  # Redis Exporter
  - job_name: "redis"
    static_configs:
      - targets: ["redis-exporter:9121"]
    scrape_interval: 30s
    scrape_timeout: 10s

  # RabbitMQ Exporter
  - job_name: "rabbitmq"
    static_configs:
      - targets: ["rabbitmq-exporter:9419"]
    scrape_interval: 30s
    scrape_timeout: 10s

  # Node Exporter (System metrics)
  - job_name: "node-exporter"
    static_configs:
      - targets: ["node-exporter:9100"]
    scrape_interval: 30s
    scrape_timeout: 10s

  # JVM Metrics (via JMX)
  - job_name: "jmx-exporter"
    static_configs:
      - targets:
          - "auth-service:8091"
          - "station-service:8093"
          - "coupon-service:8094"
          - "raffle-service:8095"
          - "dashboard-service:8096"
    scrape_interval: 30s
    scrape_timeout: 10s

  # Kubernetes API Server (if running on K8s)
  - job_name: "kubernetes-apiservers"
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels:
          [
            __meta_kubernetes_namespace,
            __meta_kubernetes_service_name,
            __meta_kubernetes_endpoint_port_name,
          ]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes
  - job_name: "kubernetes-nodes"
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes Pods
  - job_name: "kubernetes-pods"
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels:
          [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

# Remote write configuration (for long-term storage)
remote_write:
  - url: "http://thanos-receive:19291/api/v1/receive"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 15d
    retention.size: 50GB
    wal-compression: true
