services:
  postgres:
    image: postgres:15-alpine
    container_name: gasolinera-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-gasolinera_db}
      POSTGRES_USER: ${POSTGRES_USER:-gasolinera_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-gasolinera_password}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-gasolinera_user} -d ${POSTGRES_DB:-gasolinera_db}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: gasolinera-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: gasolinera-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-gasolinera_user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-gasolinera_password}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VIRTUAL_HOST:-gasolinera_vhost}
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
